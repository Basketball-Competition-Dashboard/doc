openapi: 3.0.0

info:
  title: 籃球情報室 Web API 文件
  version: 0.0.0
  description: Basketball Competition Dashboard Web API

externalDocs:
  description: Home Page
  url: https://github.com/Basketball-Competition-Dashboard

servers:
  - url: http://{API_SERVER_HOST}/web_api
    description: Web API service

tags:
  - name: 認證
    description: Authentication
  - name: 比賽
    description: Games
  - name: 球隊
    description: Teams
  - name: 球員
    description: Players

paths:
  /auth/login:
    post:
      tags:
        - 認證
      summary: 登入
      description: Login
      requestBody:
        $ref: '#/components/requestBodies/Authentication'
      responses:
        '204':
          description: Logged in
          headers:
            Set-Cookie:
              schema:
                type: string
                example: >-
                  session_id=MTRlNGIzYzI0MTk3NGIzYjg3ODI2MjlhNWY1ZWRhNmE=;
                  HttpOnly; Max-Age=31536000; Path=/; SameSite=Strict
        '404':
          $ref: '#/components/responses/NotFoundError'
  
  /auth/logout:
    post:
      tags:
        - 認證
      summary: 登出
      description: Logout
      security:
        - session_id: []
      responses:
        '204':
          description: Logged out
          headers:
            Set-Cookie:
              schema:
                type: string
                example: 'session_id=; HttpOnly; Max-Age=0; Path=/; SameSite=Strict'
        '400':
          $ref: '#/components/responses/BadRequestError'

  /games:
    post:
      tags:
        - 比賽
      summary: 取得比賽資料
      description: Get games
      requestBody:
        $ref: '#/components/requestBodies/Records'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - page
                  - values
                properties:
                  page:
                    $ref: '#/components/schemas/PageMeta'
                  values:
                    type: array
                    items:
                      $ref: '#/components/schemas/Game'
        '400':
          $ref: '#/components/responses/BadRequestError'

  /teams:
    post:
      tags:
        - 球隊
      summary: 取得球隊資料
      description: Get teams
      requestBody:
        $ref: '#/components/requestBodies/Records'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                required:
                  - page
                  - values
                properties:
                  page:
                    $ref: '#/components/schemas/PageMeta'
                  values:
                    type: array
                    items:
                      $ref: '#/components/schemas/Team'
        '400':
          $ref: '#/components/responses/BadRequestError'

  /players/profiles:
    post:
      tags:
        - 球員
      summary: 取得球員資料 - 介紹
      description: Get the profiles of players
      requestBody:
        $ref: '#/components/requestBodies/Records'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    $ref: '#/components/schemas/PageMeta'
                  values:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlayerProfile'
                required:
                  - page
                  - values
        '400':
          $ref: '#/components/responses/BadRequestError'

  /players/stats:
    post:
      tags:
        - 球員
      summary: 取得球員資料 - 表現數據
      description: Get the statistics of players
      requestBody:
        $ref: '#/components/requestBodies/Records'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    $ref: '#/components/schemas/PageMeta'
                  values:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlayerStats'
                required:
                  - page
                  - values
        '400':
          $ref: '#/components/responses/BadRequestError'

components:
  schemas:
    Game:
      description: Game data
      type: object
      required:
        - id
        - date
        - home_name
        - away_name
      properties:
        id:
          description: Game ID
          type: integer
          format: uint32
          example: 3001
        date:
          description: Date of the game
          type: string
          format: date
          example: '2024-05-06'
        home_name:
          description: Home team name
          type: string
          example: 'Celtics'
        away_name:
          description: Away team name
          type: string
          example: 'NETS'
        home_score:
          description: Home team score
          type: integer
          format: uint32
          example: 123
        away_score:
          description: Away team score
          type: integer
          format: uint32
          example: 98
        winner_name:
          description: Winner team name
          type: string
          example: 'Celtics'

    Team:
      description: Team data
      type: object
      required:
        - id
        - abbr
        - name
        - city
      properties:
        id:
          description: Team ID
          type: integer
          format: uint32
          example: 60020
        abbr:
          description: Team abbreviation
          type: string
          example: 'BOS'
        name:
          description: Team name
          type: string
          example: 'Celtics'
        city:
          description: Team city
          type: string
          example: 'Boston'
        coach:
          description: Team coach name
          type: string
          example: 'Joseph Mazzulla'
        year_founded:
          description: Team founded year
          type: integer
          format: int32
          example: 1946

    PlayerProfile:
      description: Player profile data
      type: object
      required:
        - id
        - name
      properties:
        id:
          description: Player ID
          type: integer
          format: uint32
          example: 3695
        name:
          description: Player name
          type: string
          example: 'Precious Achiuwa'
        team_name:
          description: Team name
          type: string
          example: 'Knicks'
        position:
          description: Player position
          type: string
          example: 'F'
        birthdate:
          description: Player birthdate
          type: string
          format: date
          example: '1970-05-25'
        height:
          description: Player height
          type: string
          example: '6-8'
        weight:
          description: Player weight
          type: integer
          format: uint32
          example: 243
        country:
          description: Player country
          type: string
          example: 'Nigeria'

    PlayerStats:
      description: Player statistical data
      type: object
      required:
        - id
        - name
        - game_name
      properties:
        id:
          description: Player ID
          type: integer
          format: uint32
          example: 3695
        name:
          description: Player name
          type: string
          example: 'Precious Achiuwa'
        game_name:
          description: >-
            Game name in the format of
            '{Game date} {Home team abbreviation} {Away team abbreviation}'
          type: string
          format: '[0-9]{4}-[0-9]{2}-[0-9]{2} [A-Z]{3} [A-Z]{3}'
          example: '240506 HOU MEM'
        assist:
          description: Player assist count
          type: integer
          format: uint32
          example: 20
        hit:
          description: Player hit count
          type: integer
          format: uint32
          example: 5
        steal:
          description: Player steal count
          type: integer
          format: uint32
          example: 6
        rebound:
          description: Player rebound count
          type: integer
          format: uint32
          example: 25
        free_throw:
          description: Player free throw count
          type: integer
          format: uint32
          example: 3
        score:
          description: Player score count
          type: integer
          format: uint32
          example: 24

    PageMeta:
      description: Pagination metadata
      type: object
      required:
        - offset
        - length
      properties:
        offset:
          description: Page offset in records
          type: integer
          format: uint32
          example: 0
        length:
          description: Page length in records
          type: integer
          format: uint32
          example: 10

    SortMeta:
      description: Sorting metadata
      type: object
      required:
        - field
        - order
      properties:
        field:
          description: Field to sort by
          type: array
          items:
            type: string
          example: ['name']
        order:
          description: Sort order
          type: string
          enum:
            - 'ascending'
            - 'descending'
          example: 'descending'

  requestBodies:
    Authentication:
      description: The request body for authentication
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - credential
            properties:
              name:
                type: string
                example: 'Manager Zoe'
              credential:
                type: string
                format: password
                example: "Manager Zoe's super safe password!"

    Records:
      description: The request body for records
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              page:
                $ref: '#/components/schemas/PageMeta'
              sort:
                $ref: '#/components/schemas/SortMeta'
          examples:
            'order by name asc':
              value:
                page:
                  offset: 0
                  length: 10
                sort:
                  field: ['name']
                  order: 'ascending'
            'default':
              value: {}

  responses:
    BadRequestError:
      description: Error response for a bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: 'Your request is bad.'
    
    NotFoundError:
      description: Error response for a resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: 'The resource is not found.'

  securitySchemes:
    session_id:
      type: apiKey
      description: The cookie for authentication, which is managed by the server.
      in: cookie
      name: session_id
