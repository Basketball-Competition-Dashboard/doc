openapi: 3.0.0

info:
  title: 籃球情報室 Web API 文件
  version: 0.1.0
  description: Basketball Competition Dashboard Web API

externalDocs:
  description: Home Page
  url: https://github.com/Basketball-Competition-Dashboard

servers:
  - url: '/api/web'
    description: Web API service

tags:
  - name: 認證
    description: Authentication
  - name: 比賽
    description: Game
  - name: 球隊
    description: Team
  - name: 球員介紹
    description: Player profile
  - name: 球員表現
    description: Player stat
  - name: 測試
    description: Testing

paths:
  /ping:
    get:
      tags:
        - 測試
      summary: 測試
      description: Ping Pong!
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                enum:
                  - Pong!
                example: 'Pong!'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/session:
    post:
      tags:
        - 認證
      summary: 創建認證會話
      description: Create an authenticated session
      requestBody:
        description: The request body for creating an authenticated session
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - credential
              properties:
                name:
                  description: The name of the account
                  type: string
                  example: 'Manager Zoe'
                credential:
                  description: The credential of the account
                  type: string
                  format: password
                  example: 'A super safe password!'
            examples:
              'Demo Jack':
                value:
                  name: 'Demo Manager Jack'
                  credential: 'Pa55w0rd'
              'Demo Zoe':
                value:
                  name: 'Demo Manager Zoe'
                  credential: 'A super safe password!'
      responses:
        '201':
          description: Created
          headers:
            Set-Cookie:
              description: To set the session ID for authorization
              schema:
                type: string
                example: >-
                  session_id=MTRlNGIzYzI0MTk3NGIzYjg3ODI2MjlhNWY1ZWRhNmE=;
                  HttpOnly; Max-Age=31536000; Path=/; SameSite=Strict
        '400':
          $ref: '#/components/responses/BadRequestError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - 認證
      summary: 刪除認證會話
      description: Delete an authenticated session
      security:
        - SessionID: []
      responses:
        '204':
          description: Deleted
          headers:
            Set-Cookie:
              description: To unset the session ID for authorization
              schema:
                type: string
                example: 'session_id=; HttpOnly; Max-Age=0; Path=/; SameSite=Strict'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /games:
    get:
      tags:
        - 比賽
      summary: 讀取比賽資料
      description: Read games which are paginated and sorted
      parameters:
        - $ref: '#/components/parameters/page_offset'
        - $ref: '#/components/parameters/page_length'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: Games
                type: array
                items:
                  $ref: '#/components/schemas/Game'
              examples:
                'three games':
                  value:
                    - id: 3001
                      away_id: 60019
                      away_abbr: 'BOS'
                      home_id: 60020
                      home_abbr: 'MIL'
                      date: '2024-05-06'
                      away_name: 'Celtics'
                      home_name: 'Bucks'
                      away_score: 100
                      home_score: 105
                      is_home_winner: true
                    - id: 3002
                      away_id: 60020
                      away_abbr: 'MIL'
                      home_id: 60021
                      home_abbr: 'IND'
                      date: '2024-05-07'
                      away_name: 'Bucks'
                      home_name: 'Pacers'
                      away_score: 110
                      home_score: 105
                      is_home_winner: false
                    - id: 3003
                      away_id: 60021
                      away_abbr: 'IND'
                      home_id: 60019
                      home_abbr: 'BOS'
                      date: '2024-05-08'
                      away_name: 'Pacers'
                      home_name: 'Celtics'
                      away_score: 105
                      home_score: 95
                'no game':
                  value: []
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /game:
    post:
      tags:
        - 比賽
      summary: 新增比賽資料
      description: Create a game
      security:
        - SessionID: []
      requestBody:
        description: The request body for creating a game
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameNew'
            examples:
              'A request of creating a game':
                value:
                  date: '2024-05-09'
                  away_name: 'Pacers'
                  home_name: 'Bucks'
                  away_score: 3
                  home_score: 0
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
              examples:
                'A response of creating a game':
                  value:
                    id: 3004
                    away_id: 60021
                    away_abbr: 'IND'
                    home_id: 60020
                    home_abbr: 'MIL'
                    date: '2024-05-09'
                    away_name: 'Pacers'
                    home_name: 'Bucks'
                    away_score: 3
                    home_score: 0
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /games/{id}/teams/{team_id}:
    patch:
      tags:
        - 比賽
      summary: 更新比賽隊伍資料
      description: Update a game's team
      security:
        - SessionID: []
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/team_id'
      requestBody:
        description: |
          The request body for updating a game's team.

          Only the presented fields will be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GameTeamPatch'
            examples:
              "A request of updating a game's team":
                value:
                  score: 130
                  is_winner: true
      responses:
        '204':
          description: Updated
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /teams:
    get:
      tags:
        - 球隊
      summary: 讀取球隊資料
      description: Read teams which are paginated and sorted
      parameters:
        - $ref: '#/components/parameters/page_offset'
        - $ref: '#/components/parameters/page_length'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: Teams
                type: array
                items:
                  $ref: '#/components/schemas/Team'
              examples:
                'three teams':
                  value:
                    - id: 60019
                      abbr: 'BOS'
                      name: 'Celtics'
                      city: 'Boston'
                      year_founded: 1946
                      coach: 'Joseph Mazzulla'
                    - id: 60020
                      abbr: 'MIL'
                      name: 'Bucks'
                      city: 'Milwaukee'
                      year_founded: 1968
                      coach: 'Vin Baker'
                    - id: 60021
                      abbr: 'IND'
                      name: 'Pacers'
                      city: 'Indiana'
                      year_founded: 1967
                      coach: 'Dane Fife'
                'no team':
                  value: []
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /team:
    post:
      tags:
        - 球隊
      summary: 新增球隊資料
      description: Create a team
      security:
        - SessionID: []
      requestBody:
        description: The request body for creating a team
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamNew'
            examples:
              'A request of creating a team':
                value:
                  abbr: 'BOS'
                  name: 'Celtics'
                  city: 'Boston'
                  year_founded: 1946
                  coach: 'John Russell'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
              examples:
                'A response of creating a team':
                  value:
                    id: 60022
                    abbr: 'BOS'
                    name: 'Celtics'
                    city: 'Boston'
                    year_founded: 1946
                    coach: 'John Russell'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /teams/{id}:
    patch:
      tags:
        - 球隊
      summary: 更新球隊資料
      description: Update a team
      security:
        - SessionID: []
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: |
          The request body for updating a team.

          Only the presented fields will be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamPatch'
            examples:
              'A request of updating a team':
                value:
                  coach: 'Joseph Mazzulla'
      responses:
        '204':
          description: Updated
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /players/profile:
    get:
      tags:
        - 球員介紹
      summary: 讀取球員介紹資料
      description: Read players' profile which are paginated and sorted
      parameters:
        - $ref: '#/components/parameters/page_offset'
        - $ref: '#/components/parameters/page_length'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: Players' profile
                type: array
                items:
                  $ref: '#/components/schemas/PlayerProfile'
              examples:
                "three players' profile":
                  value:
                    - id: 3695
                      name: 'Precious Achiuwa'
                      team_name: 'Knicks'
                      position: 'F'
                      birthdate: '1970-05-25'
                      height: '6-8'
                      weight: 243
                      country: 'Nigeria'
                    - id: 3696
                      name: 'Steven Adams'
                      team_name: 'Grizzlies'
                      position: 'C'
                      birthdate: '1970-05-25'
                      height: '6-8'
                      weight: 265
                      country: 'New Zealand'
                    - id: 3697
                      name: 'Bam Adebayo'
                      team_name: 'Heat'
                      position: 'C'
                      birthdate: '1970-05-25'
                      height: '6-8'
                      weight: 255
                      country: 'USA'
                'no player':
                  value: []
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /player/profile:
    post:
      tags:
        - 球員介紹
      summary: 新增球員介紹資料
      description: Create a player's profile
      security:
        - SessionID: []
      requestBody:
        description: The request body for creating a player's profile
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerProfileNew'
            examples:
              "A request of creating a player's profile":
                value:
                  name: 'Precious Achiuwa'
                  team_name: 'Knicks'
                  birthdate: '1970-05-25'
                  height: '6-8'
                  weight: 243
                  country: 'Nigeria'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerProfile'
              examples:
                "A response of creating a player's profile":
                  value:
                    id: 3695
                    name: 'Precious Achiuwa'
                    team_name: 'Knicks'
                    birthdate: '1970-05-25'
                    height: '6-8'
                    weight: 243
                    country: 'Nigeria'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /players/{id}/profile:
    patch:
      tags:
        - 球員介紹
      summary: 更新球員介紹資料
      description: Update a player's profile
      security:
        - SessionID: []
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        description: |
          The request body for updating a player's profile.

          Only the presented fields will be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerProfilePatch'
            examples:
              "A request of updating a player's profile":
                value:
                  position: 'F'
                  weight: 244
      responses:
        '204':
          description: Updated
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    delete:
      tags:
        - 球員介紹
      summary: 刪除球員介紹資料
      description: Delete a player's profile
      security:
        - SessionID: []
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: Deleted
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /players/stats:
    get:
      tags:
        - 球員表現
      summary: 讀取球員表現資料
      description: Read players' statistics which are paginated and sorted
      parameters:
        - $ref: '#/components/parameters/page_offset'
        - $ref: '#/components/parameters/page_length'
        - $ref: '#/components/parameters/sort_field'
        - $ref: '#/components/parameters/sort_order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: Players' statistics
                type: array
                items:
                  $ref: '#/components/schemas/PlayerStat'
              examples:
                "three players' stat":
                  value:
                    - id: 3695
                      name: 'Precious Achiuwa'
                      game_id: 3001
                      game_date: '2024-05-06'
                      game_away_abbr: 'HOU'
                      game_home_abbr: 'MEM'
                      assist: 20
                      hit: 5
                      steal: 6
                      rebound: 25
                      free_throw: 3
                      score: 24
                    - id: 3696
                      name: 'Steven Adams'
                      game_id: 3001
                      game_date: '2024-05-06'
                      game_away_abbr: 'HOU'
                      game_home_abbr: 'MEM'
                      assist: 10
                      hit: 2
                      steal: 3
                      rebound: 15
                      free_throw: 1
                      score: 12
                    - id: 3697
                      name: 'Bam Adebayo'
                      game_id: 3001
                      game_date: '2024-05-06'
                      game_away_abbr: 'HOU'
                      game_home_abbr: 'MEM'
                      assist: 15
                      hit: 3
                      steal: 4
                      rebound: 20
                      free_throw: 2
                      score: 18
                'no player':
                  value: []
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /player/stat:
    post:
      tags:
        - 球員表現
      summary: 新增球員表現資料
      description: Create a player's statistics
      security:
        - SessionID: []
      requestBody:
        description: The request body for creating a player's stat
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerStatNew'
            examples:
              "A request of creating a player's stat":
                value:
                  name: 'Precious Achiuwa'
                  game_date: '2024-05-06'
                  game_away_abbr: 'HOU'
                  game_home_abbr: 'MEM'
                  assist: 20
                  hit: 5
                  steal: 6
                  rebound: 25
                  free_throw: 3
                  score: 24
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerStat'
              examples:
                "A response of creating a player's stat":
                  value:
                    id: 3695
                    game_id: 3001
                    name: 'Precious Achiuwa'
                    game_date: '2024-05-06'
                    game_away_abbr: 'HOU'
                    game_home_abbr: 'MEM'
                    assist: 20
                    hit: 5
                    steal: 6
                    rebound: 25
                    free_throw: 3
                    score: 24
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /players/{id}/stats/{game_id}:
    patch:
      tags:
        - 球員表現
      summary: 更新球員表現資料
      description: Update a player's statistics for a game
      security:
        - SessionID: []
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/game_id'
      requestBody:
        description: |
          The request body for updating a player's stat for a game.

          Only the presented fields will be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerStatPatch'
            examples:
              "A request of updating a player's stat for a game":
                value:
                  hit: 1
                  free_throw: 4
                  score: 30
      responses:
        '204':
          description: Updated
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    
    delete:
      tags:
        - 球員表現
      summary: 刪除球員表現資料
      description: Delete a player's statistics for a game
      security:
        - SessionID: []
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/game_id'
      responses:
        '204':
          description: Deleted
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  parameters:
    id:
      description: The ID of the resource
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: uint32
        example: 0

    game_id:
      description: The ID of the game
      name: game_id
      in: path
      required: true
      schema:
        type: integer
        format: uint32
        example: 3001

    team_id:
      description: The ID of the team
      name: team_id
      in: path
      required: true
      schema:
        type: integer
        format: uint32
        example: 3001

    page_offset:
      description: The offset of paginated data
      name: page_offset
      in: query
      required: true
      schema:
        type: integer
        format: uint32
        example: 0

    page_length:
      description: The length of paginated data
      name: page_length
      in: query
      required: true
      schema:
        type: integer
        format: uint32
        example: 3

    sort_field:
      description: Field to sort by
      name: sort_field
      in: query
      required: true
      schema:
        type: string
        example: 'name'

    sort_order:
      description: Sort order
      name: sort_order
      in: query
      required: true
      schema:
        type: string
        enum:
          - 'ascending'
          - 'descending'
        example: 'descending'

  schemas:
    Game:
      description: A game
      allOf:
        - type: object
          required:
            - id
            - away_id
            - away_abbr
            - home_id
            - home_abbr
          properties:
            id:
              description: The ID of the game
              type: integer
              format: uint32
            away_id:
              description: The ID of the away team
              type: integer
              format: uint32
            away_abbr:
              description: The abbreviation of the away team
              type: string
            home_id:
              description: The ID of the home team
              type: integer
              format: uint32
            home_abbr:
              description: The abbreviation of the home team
              type: string
        - $ref: '#/components/schemas/GameNew'

    GameNew:
      description: A new game
      allOf:
        - type: object
          required:
            - date
            - away_name
            - home_name
          properties:
            date:
              description: The date of the game
              type: string
              format: date
            away_name:
              description: The name of the away team
              type: string
            home_name:
              description: The name of the home team
              type: string
            away_score:
              description: The score of the away team
              type: integer
              format: uint32
            home_score:
              description: The score of the home team
              type: integer
              format: uint32
            is_home_winner:
              description: Indicating the winner of the game
              type: boolean

    GameTeamPatch:
      description: A patch for the game's team
      type: object
      properties:
        score:
          description: The score of the team
          type: integer
          format: uint32
        is_winner:
          description: |
            Indicating the winner of the game.

            The field is mutually exclusive:
            if one team is set as the winner,
            all other teams  in the game will be unset as winners.
          type: boolean

    Team:
      description: A team
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              description: The ID of the team
              type: integer
              format: uint32
        - $ref: '#/components/schemas/TeamNew'

    TeamNew:
      description: A new team
      allOf:
        - type: object
          required:
            - abbr
            - name
            - city
            - year_founded
          properties:
            abbr:
              description: The abbreviation of the team
              type: string
              example: 'BOS'
            name:
              description: The name of the team
              type: string
              example: 'Celtics'
            city:
              description: The city of the team
              type: string
              example: 'Boston'
            year_founded:
              description: The year the team was founded
              type: integer
              format: uint32
              example: 1946
        - $ref: '#/components/schemas/TeamPatch'

    TeamPatch:
      description: A patch for the team
      type: object
      properties:
        coach:
          description: The coach of the team
          type: string
          example: 'Joseph Mazzulla'

    PlayerProfile:
      description: A player profile
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              description: The ID of the player
              type: integer
              format: uint32
        - $ref: '#/components/schemas/PlayerProfileNew'

    PlayerProfileNew:
      description: A new player profile
      allOf:
        - $ref: '#/components/schemas/PlayerProfilePatch'
        - type: object
          required:
            - name

    PlayerProfilePatch:
      description: A patch for the player profile
      type: object
      properties:
        name:
          description: The name of the player
          type: string
          example: 'Precious Achiuwa'
        team_name:
          description: The name of the team
          type: string
          example: 'Knicks'
        position:
          description: The position of the player
          type: string
          example: 'F'
        birthdate:
          description: The birthdate of the player
          type: string
          format: date
          example: '1970-05-25'
        height:
          description: The height of the player
          type: string
          example: '6-8'
        weight:
          description: The weight of the player
          type: integer
          format: uint32
          example: 243
        country:
          description: The country of the player
          type: string
          example: 'Nigeria'

    PlayerStat:
      description: A player statistics
      allOf:
        - type: object
          required:
            - id
            - game_id
          properties:
            id:
              description: The ID of the player
              type: integer
              format: uint32
            game_id:
              description: The ID of the game
              type: integer
              format: uint32
        - $ref: '#/components/schemas/PlayerStatNew'

    PlayerStatNew:
      description: A new player statistics
      allOf:
        - type: object
          required:
            - name
            - game_date
            - game_away_abbr
            - game_home_abbr
          properties:
            name:
              description: The name of the player
              type: string
              example: 'Precious Achiuwa'
            game_date:
              description: The date of the game
              type: string
              format: date
              example: '2024-05-06'
            game_away_abbr:
              description: The abbreviation of the away team
              type: string
              example: 'HOU'
            game_home_abbr:
              description: The abbreviation of the home team
              type: string
              example: 'MEM'
        - $ref: '#/components/schemas/PlayerStatPatch'

    PlayerStatPatch:
      description: A patch for the player statistics
      type: object
      properties:
        assist:
          description: Player assist count
          type: integer
          format: uint32
        hit:
          description: Player hit count
          type: integer
          format: uint32
        steal:
          description: Player steal count
          type: integer
          format: uint32
        rebound:
          description: Player rebound count
          type: integer
          format: uint32
        free_throw:
          description: Player free throw count
          type: integer
          format: uint32
        score:
          description: Player score count
          type: integer
          format: uint32

    Error:
      description: Reason for error
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: 'An unexpected error has occurred.'

  responses:
    BadRequestError:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: 'Your request is invalid.'

    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: 'You are not authorized to access this resource.'

    NotFoundError:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: 'The resource you are accessing is not found.'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            message: 'Sorry, an unexpected error has occurred.'

  securitySchemes:
    SessionID:
      description: The cookie for authorization, which is managed by the server.
      name: session_id
      in: cookie
      type: apiKey
